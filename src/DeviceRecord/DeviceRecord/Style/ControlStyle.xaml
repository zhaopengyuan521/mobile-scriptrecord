<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- 自定义设备列表样式-->
    <Style TargetType="{x:Type ComboBox}" x:Key="deviceCombox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                        <ToggleButton Grid.ColumnSpan="2" x:Name="ToggleButton" Focusable="false"
                                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="Transparent"/>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Grid.Column="1" x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                              Content="{TemplateBinding SelectionBoxItem}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <Popup x:Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Fade">
                            <Border x:Name="DropDown" BorderThickness="1" CornerRadius="1"
                                                        MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#0085d5" Opacity="0.5"></SolidColorBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="#0085d5" ></SolidColorBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="scrViewer" Margin="3,6,3,6" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Width="auto" HorizontalAlignment="Center"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--自定义关闭按钮样式-->
    <Style TargetType="Button" x:Key="closeButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="btnCloseBg" Source="/Resources/close_btn.png"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Source" TargetName="btnCloseBg" Value="../Resources/close_hover_btn.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--自定义普通按钮样式-->
    <ControlTemplate x:Key="commonButton_Template" TargetType="{x:Type Button}">
        <Border BorderThickness="1" CornerRadius="2,2,2,2" Name="commonButton_Background">
            <Border.Background>
                <SolidColorBrush Color="#f4f4f4"></SolidColorBrush>
            </Border.Background>
            <Border.BorderBrush>
                <SolidColorBrush Color="#a6a6a6"></SolidColorBrush>
            </Border.BorderBrush>
            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#bee7fd"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#4fadd8"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#ebeced"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#4fadd8"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#a0a1a2"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--自定义普通按钮默认选中样式-->
    <ControlTemplate x:Key="commonButtonForcus_Template" TargetType="{x:Type Button}">
        <Border BorderThickness="1" CornerRadius="2,2,2,2" Name="commonButton_Background">
            <Border.Background>
                <SolidColorBrush Color="#f4f4f4"></SolidColorBrush>
            </Border.Background>
            <Border.BorderBrush>
                <SolidColorBrush Color="#4fadd8"></SolidColorBrush>
            </Border.BorderBrush>
            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#bee7fd"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#4fadd8"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#ebeced"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#4fadd8"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="commonButton_Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#a0a1a2"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>